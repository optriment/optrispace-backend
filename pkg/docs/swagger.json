{
    "swagger": "2.0",
    "info": {
        "description": "OptriSpace Server API",
        "title": "OptriSpace API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://github.com/optriment/optrispace-backend/blob/develop/LICENSE"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/applications": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "List of applications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ApplicationDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/applications/{id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns an application by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "Get an application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ApplicationDTO"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "application not found",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/applications/{id}/chat": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Performer or customer is getting chat for this application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application",
                    "chat"
                ],
                "summary": "Get chat for an application",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Chat"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "application not found or user has no permissions for view chat",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/chats": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "User is requesting all available chats sorted by last message create time in reverse order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Returns list of chats for the current user",
                "responses": {
                    "200": {
                        "description": "chat will be returned with all messages",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ChatDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "user is not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "user is not conversation participant",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "chat does not exist",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/chats/{chat_id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "A chat participant is requesting chat description with all messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Returns a fully chat description",
                "parameters": [
                    {
                        "type": "string",
                        "description": "chat id",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "chat will be returned with all messages",
                        "schema": {
                            "$ref": "#/definitions/model.Chat"
                        }
                    },
                    "401": {
                        "description": "user is not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "user is not conversation participant",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "chat does not exist",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/chats/{chat_id}/messages": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "A chat participant sending message to the chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Post a new message to the chat",
                "parameters": [
                    {
                        "description": "New message",
                        "name": "message",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.newMessage"
                        }
                    },
                    {
                        "type": "string",
                        "description": "chat id",
                        "name": "chat_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "user is not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "user is not conversation participant",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "chat does not exist",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "message text exceeds maximum text length",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/contracts": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns list of contracts where the current user is performer or customer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "List contracts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ContractDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creates a new contract based on existent application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Create a new contract",
                "parameters": [
                    {
                        "description": "Contract Params",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.createContractParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ContractDTO"
                        }
                    },
                    "400": {
                        "description": "invalid format",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "409": {
                        "description": "duplication",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/contracts/{id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns contract with specified id. This operation is allowed only for performer or customer.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Get contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContractDTO"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "contract not found or user not authorized to view contract",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/contracts/{id}/accept": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Performer is accepting contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Accept contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContractDTO"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "insufficient rights",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "contract not found or user not authorized to view contract",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/contracts/{id}/approve": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Customer is approving performer's working results",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Approve working results and allow to withdraw money from Smart Contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContractDTO"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "insufficient rights",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "contract not found or user not authorized to view contract",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "insufficient funds on the contract in the blockchain",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/contracts/{id}/complete": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Performer is completing contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Complete contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContractDTO"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "insufficient rights",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "contract not found or user not authorized to view contract",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/contracts/{id}/deploy": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Customer has deployed contract to the blockchain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Deploy contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContractDTO"
                        }
                    },
                    "400": {
                        "description": "invalid format",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "insufficient rights",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "contract not found or user not authorized to view contract",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/contracts/{id}/fund": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Customer is funded contract in the blockchain",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Fund contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContractDTO"
                        }
                    },
                    "400": {
                        "description": "invalid format",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "insufficient rights",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "contract not found or user not authorized to view contract",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/contracts/{id}/sign": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Performer is signing contract",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "contract"
                ],
                "summary": "Sign contract",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Contract ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ContractDTO"
                        }
                    },
                    "400": {
                        "description": "invalid format",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "insufficient rights",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "contract not found or user not authorized to view contract",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jobs": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns list of jobs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "List jobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.JobDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creates a new job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "Create a new job",
                "parameters": [
                    {
                        "description": "Job Params",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.createJobParams"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.JobDTO"
                        }
                    },
                    "400": {
                        "description": "invalid format",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jobs/{id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns job by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "Get job by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JobCardDTO"
                        }
                    },
                    "404": {
                        "description": "job not found",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Updates job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "Update job",
                "parameters": [
                    {
                        "description": "Job params",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updateJobParams"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JobDTO"
                        }
                    },
                    "400": {
                        "description": "invalid format",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "job not found or current user is not creator",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jobs/{id}/block": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Blocks existent job to hide it from public access. To execute this action, user must have admin privileges.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "Block a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "user is not admin",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jobs/{id}/resume": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Resumes existent job to continue receiving applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "Resume a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "user is not an owner",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jobs/{id}/suspend": {
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Suspends existent job to stop receiving applications",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "job"
                ],
                "summary": "Suspend a job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "user is not an owner",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jobs/{job_id}/application": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns an application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application"
                ],
                "summary": "Get an application for specific job and applicant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.ApplicationDTO"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "job not found",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/jobs/{job_id}/applications": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns applications list for the job by job_id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application",
                    "job"
                ],
                "summary": "List applications for the job",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ApplicationDTO"
                            }
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "job not found",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Applicant creates a new application for a job",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "application",
                    "job"
                ],
                "summary": "Creates a new application for a job",
                "parameters": [
                    {
                        "description": "New application request",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.createApplicationParams"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Job ID to apply",
                        "name": "job_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/model.ApplicationDTO"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "job with specified ID is not found",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Create user security token for supplied conditionals",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.loginParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserContext"
                        }
                    },
                    "422": {
                        "description": "unable to login (login or password is not valid)",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns information about current authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Returns current user information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserContext"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/password": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Change password for current authenticated user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Change password for current authenticated user",
                "parameters": [
                    {
                        "description": "Change password request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.newPasswordParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserContext"
                        }
                    },
                    "401": {
                        "description": "user not authorized or old password is incorrect",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "422": {
                        "description": "validation failed",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/persons/{id}": {
            "get": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Returns person description by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Get person description by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "person not found",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Updates existent person. User must be authenticated as this person.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Update existent person",
                "parameters": [
                    {
                        "description": "Update person details",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.updatePerson"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    },
                    "400": {
                        "description": "invalid format",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "insufficient rights",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "person not found",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/persons/{id}/resources": {
            "put": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Updates resources for existent person. User must be authenticated as this person.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "person"
                ],
                "summary": "Set resources for person",
                "parameters": [
                    {
                        "description": "Person resources in JSON",
                        "name": "job",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Person ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "invalid format (body should be formatted as JSON)",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "401": {
                        "description": "user not authorized",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "403": {
                        "description": "insufficient rights",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "404": {
                        "description": "person not found",
                        "schema": {
                            "$ref": "#/definitions/model.BackendError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "Register a new user with specified description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Register new user",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Person"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.UserContext"
                        }
                    },
                    "422": {
                        "description": "input object is invalid",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/stats": {
            "get": {
                "description": "Get stats",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Get stats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Stats"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/echo.HTTPError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.createApplicationParams": {
            "type": "object",
            "required": [
                "comment",
                "price"
            ],
            "properties": {
                "comment": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "controller.createContractParams": {
            "type": "object",
            "required": [
                "application_id",
                "description",
                "price",
                "title"
            ],
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "price": {
                    "type": "number"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.createJobParams": {
            "type": "object",
            "required": [
                "description",
                "title"
            ],
            "properties": {
                "budget": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.loginParams": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "controller.newMessage": {
            "type": "object",
            "properties": {
                "text": {
                    "type": "string"
                }
            }
        },
        "controller.newPasswordParams": {
            "type": "object",
            "properties": {
                "new_password": {
                    "type": "string"
                },
                "old_password": {
                    "type": "string"
                }
            }
        },
        "controller.updateJobParams": {
            "type": "object",
            "required": [
                "description",
                "title"
            ],
            "properties": {
                "budget": {
                    "type": "number"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "controller.updatePerson": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "ethereum_address": {
                    "type": "string"
                }
            }
        },
        "echo.HTTPError": {
            "type": "object",
            "properties": {
                "message": {}
            }
        },
        "model.ApplicationDTO": {
            "type": "object",
            "properties": {
                "applicant_display_name": {
                    "type": "string"
                },
                "applicant_ethereum_address": {
                    "type": "string"
                },
                "applicant_id": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "string"
                },
                "contract_status": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "job_budget": {
                    "type": "number"
                },
                "job_description": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "job_title": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "model.BackendError": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "tech_info": {
                    "type": "string"
                }
            }
        },
        "model.Chat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Message"
                    }
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "model.ChatDTO": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "contract_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "job_id": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "last_message_at": {
                    "type": "string"
                },
                "participants": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ParticipantDTO"
                    }
                },
                "title": {
                    "type": "string"
                },
                "topic": {
                    "type": "string"
                }
            }
        },
        "model.ContractDTO": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "string"
                },
                "contract_address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "customer_address": {
                    "type": "string"
                },
                "customer_display_name": {
                    "type": "string"
                },
                "customer_id": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "performer_address": {
                    "type": "string"
                },
                "performer_display_name": {
                    "type": "string"
                },
                "performer_id": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.JobCardDTO": {
            "type": "object",
            "properties": {
                "applications_count": {
                    "type": "integer"
                },
                "budget": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "customer_display_name": {
                    "type": "string"
                },
                "customer_ethereum_address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "is_suspended": {
                    "type": "boolean"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.JobDTO": {
            "type": "object",
            "properties": {
                "applications_count": {
                    "type": "integer"
                },
                "budget": {
                    "type": "number"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "customer_display_name": {
                    "type": "string"
                },
                "customer_ethereum_address": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.Message": {
            "type": "object",
            "properties": {
                "author_name": {
                    "type": "string"
                },
                "chat_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "model.ParticipantDTO": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "ethereum_address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "model.Person": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "display_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "ethereum_address": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_admin": {
                    "type": "boolean"
                },
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "realm": {
                    "type": "string"
                },
                "resources": {
                    "type": "string"
                }
            }
        },
        "model.Stats": {
            "type": "object",
            "properties": {
                "opened_jobs": {
                    "type": "integer"
                },
                "registrations_by_date": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "total_contracts": {
                    "type": "integer"
                },
                "total_registrations": {
                    "type": "integer"
                },
                "total_transactions_volume": {
                    "type": "number"
                }
            }
        },
        "model.UserContext": {
            "type": "object",
            "properties": {
                "authenticated": {
                    "type": "boolean"
                },
                "subject": {
                    "$ref": "#/definitions/model.Person"
                },
                "token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerToken": {
            "description": "Bearer token in Authorization header",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}